1.to display lines of file f1 that begins with "The".
>grep -i ^the f1

2.count total number of black lines of file f1.
>grep "^$" f1| wc -l

3.display the lines of file f1 that do not contain 'Unix'.
>grep -iv "unix" f1
>grep -ic "unix" f1-c is for count who don't have unix containt..

4.replace all occurrence of 'unix' with 'linux' of file f1.
>sed  's/unix/linux/' f1

5.display the lines of file f1 that contain 'VB.NET' and/or 'ASP.NET'.
>grep -E "VB.NET |ASP.NET" f1

6. display lines of file f1 which have exactly 4 character.
> grep -E '^[a-z]{4}$' f1

7.do not display lines number 3 to 5 of file f1 
> sed -n '3,5p' f1

8.insert blank line after each line of file f1
=> sed 'G' f1

~ Write command using awk:

1]	Count number of vowels in file f1.
=> awk '{count += gsub(/[aeiouAEIOU]/, "")} END {print count}' f1


2]	Display all palindrome word in file f1.
=> awk '
function is_palindrome(word) { len = length(word)
for (i = 1; i <= len / 2; i++) {
if (substr(word, i, 1) != substr(word, len - i + 1, 1)) return 0
}
return 1
}


{
for (i = 1; i <= NF; i++) {
if (is_palindrome($i)) { print $i
}
}
 
}
' f1

3.count occurrence of pattern 'unix' in file f1
>awk '/unix/ { count++ } END { print count }' f1
	
4.count number of vowels in file f1.
>awk '{ count += gsub(/[aeiouAEIOU]/, "") } END { print count }' f1

5.display all palindrome word in file f1.
awk '
{
    for (i = 1; i <= NF; i++) {
        word = $i
        len = length(word)
        reversed = ""
        for (j = len; j > 0; j--) {
            reversed = reversed substr(word, j, 1)
        }
        if (word == reversed) {
            print word
        }
    }
}
' f1






























